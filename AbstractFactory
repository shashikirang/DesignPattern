/******************************************************************************

                Abstract Factory Design Pattern 
*******************************************************************************/

#include <iostream>
using namespace std;

class IButton {
    public: 
        virtual void press() = 0;
};

class MacButton : public IButton {
    public :
        void press() {
            cout << "Mac button pressed" << endl;
        }
};

class WinButton : public IButton {
    public :
        void press() {
            cout << "Windows button pressed" << endl;
        }
};

class ITextBox {
    public: 
        virtual void showText() = 0;
};

class MacTextBox : public ITextBox {
    public :
        void showText() {
            cout << "Mac TextBox" << endl;
        }
};

class WinTextBox : public ITextBox {
    public :
        void showText() {
            cout << "Windows TextBox" << endl;
        }
};

class IFactory {
    public: 
        virtual IButton* CreateButton() = 0;
        virtual ITextBox* CreateTextBox() = 0;
    
};

class MacFactory : public IFactory {
    public: 
        IButton* CreateButton() {
            return new MacButton();
        }
        
        ITextBox* CreateTextBox() {
            return new MacTextBox();
        }
};

class WinFactory : public IFactory {
    public: 
        IButton* CreateButton() {
            return new WinButton();
        }
        
        ITextBox* CreateTextBox() {
            return new WinTextBox();
        }
};

class GUIFactory {
    
    public: 
        static IFactory* CreateFactory(string osType) {
            if (osType == "mac") {
                return new MacFactory;
            } else if (osType == "windows") {
                return new WinFactory;
            } else {
                return new MacFactory;
            }
        }
};

int main()
{
   string osType;
   cout << "Enter the OS Type" << endl;
   cin >> osType;
   
   IFactory * fact = GUIFactory::CreateFactory(osType);
   
   IButton* button = fact->CreateButton();
   button->press();
   
   ITextBox* textBox = fact->CreateTextBox();
   textBox->showText();
   
   return 0;
   
}
